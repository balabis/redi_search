#!/usr/bin/env ruby
# frozen_string_literal: true

require "bundler/setup"
require "redi_search"

require "faker"
require "irb"
require "active_support/logger"
require "active_record"

ActiveSupport::LogSubscriber.logger = ActiveSupport::Logger.new(STDOUT)

ActiveRecord::Base.establish_connection adapter: "sqlite3", database: ":memory:"

ActiveRecord::Migration.create_table :users do |t|
  t.string :first
  t.string :last
end

class User < ActiveRecord::Base
  redi_search do
    text_field :first, phonetic: "dm:en"
    text_field :last, phonetic: "dm:en"
    tag_field :tags
    text_field :name, phonetic: "dm:en" do
      "#{first} #{last}"
    end
  end
end

def seed_users(count = 10_000)
  User.insert_all(
    Array.new(count).map do
      { first: Faker::Name.first_name, last: Faker::Name.last_name }
    end
  )
  User.reindex
end

def reload!
  exec($0)
end

IRB.start
